{
  "name": "Utils",
  "tagline": "ios Utils oc的工具库",
  "body": "# Utils\r\nios Utils oc的工具库\r\n\r\n## 验证框架\r\n```objective-c\r\n+ (BOOL)isValidateEmail:(NSString *)email;//邮箱符合性验证。\r\n+ (BOOL)isNumber:(NSString *)string;//全是数字。\r\n+ (BOOL)isEnglishWords:(NSString *)string;//验证英文字母。\r\n+ (BOOL)isValidatePassword:(NSString *)string;//验证密码：6—16位，只能包含字符、数字和 下划线。\r\n+ (BOOL)isChineseWords:(NSString *)string;//验证是否为汉字。\r\n+ (BOOL)isInternetUrl:(NSString *)string;//验证是否为网络链接。\r\n//正确格式为：XXXX-XXXXXXX，XXXX-XXXXXXXX，XXX-XXXXXXX，XXX-XXXXXXXX，XXXXXXX，XXXXXXXX\r\n+ (BOOL)isPhoneNumber:(NSString *)string;//验证是否为电话号码。\r\n+ (BOOL)isElevenDigitNum:(NSString *)string;\r\n+ (BOOL)isIdentifyCardNumber:(NSString *)string;//验证15或18位身份证。\r\n```\r\n\r\n## Category\r\n```objective-c\r\n/**\r\n *  产生一个Image的倒影，并把这个倒影图片加在一个View上面。\r\n *  @param  image :被倒影的原图。\r\n *  @param  frame :盖在上面的图。\r\n *  @param  opacity :倒影的透明度，0为完全透明，即倒影不可见;1为完全不透明。\r\n *  @param  view :倒影加载在上面。\r\n *  return  产生倒影后的View。\r\n */\r\n+ (UIView *)reflectImage:(UIImage *)image withFrame:(CGRect)frame opacity:(CGFloat)opacity atView:(UIView *)view;\r\n//开始和停止旋转动画\r\n- (void)startRotationAnimatingWithDuration:(CGFloat)duration;\r\n@interface UIView (Animation)\r\n//揭开\r\n+ (void)animationReveal:(UIView *)view direction:(NSString *)direction;\r\n//渐隐渐消\r\n+ (void)animationFade:(UIView *)view;\r\n//翻转\r\n+ (void)animationFlip:(UIView *)view direction:(NSString *)direction;\r\n//旋转缩放\r\n+ (void)animationRotateAndScaleEffects:(UIView *)view;//各种旋转缩放效果。\r\n+ (void)animationRotateAndScaleDownUp:(UIView *)view;//旋转同时缩小放大效果\r\n//push\r\n+ (void)animationPush:(UIView *)view direction:(NSString *)direction;\r\n//Curl UnCurl\r\n+ (void)animationCurl:(UIView *)view direction:(NSString *)direction;\r\n+ (void)animationUnCurl:(UIView *)view direction:(NSString *)direction;\r\n//Move\r\n+ (void)animationMove:(UIView *)view direction:(NSString *)direction;\r\n//立方体\r\n+ (void)animationCube:(UIView *)view direction:(NSString *)direction;\r\n//水波纹\r\n+ (void)animationRippleEffect:(UIView *)view;\r\n//相机开合\r\n+ (void)animationCameraEffect:(UIView *)view type:(NSString *)type;\r\n//吸收\r\n+ (void)animationSuckEffect:(UIView *)view;\r\n@interface UIImage (Addition)\r\n\r\n/**\r\n *  抓取屏幕。\r\n *  @param  scale :屏幕放大倍数，1为原尺寸。\r\n *  return  屏幕后的Image。\r\n */\r\n+ (UIImage *)grabScreenWithScale:(CGFloat)scale;\r\n\r\n/**\r\n *  抓取UIView及其子类。\r\n *  @param  view : UIView及其子类。\r\n *  @param  scale :屏幕放大倍数，1为原尺寸。\r\n *  return  抓取图片后的Image。\r\n */\r\n+ (UIImage *)grabImageWithView:(UIView *)view scale:(CGFloat)scale;\r\n\r\n/**\r\n *  合并两个Image。\r\n *  @ param  image1、image2: 两张图片。\r\n *  @ param  frame1、frame2:两张图片放置的位置。\r\n *  @ param  size:返回图片的尺寸。\r\n *  return  合并后的两个图片的Image。\r\n */\r\n+ (UIImage *)mergeWithImage1:(UIImage *)image1 image2:(UIImage *)image2 frame1:(CGRect)frame1 frame2:(CGRect)frame2 size:(CGSize)size;\r\n\r\n/**\r\n *  把一个Image盖在另一个Image上面。\r\n *  @ param  image : 底图。\r\n *  @param  mask :盖在上面的图。\r\n *  return  Image。\r\n */\r\n+ (UIImage *)maskImage:(UIImage *)image withMask:(UIImage *)mask;\r\n\r\n/**\r\n *  把一个Image尺寸缩放到另一个尺寸。\r\n *  @ param  view : UIView及其子类。\r\n *  @ param  scale :屏幕放大倍数，1为原尺寸。\r\n *  return  尺寸更改后的Image。\r\n */\r\n+ (UIImage *)scaleImage:(UIImage *)image toSize:(CGSize)size;\r\n\r\n/**\r\n *  改变一个Image的色彩。\r\n *  @ param  image : 被改变的Image。\r\n *  @ param  color : 要改变的目标色彩。\r\n *  return  色彩更改后的Image。\r\n */\r\n+(UIImage *)colorizeImage:(UIImage *)image withColor:(UIColor *)color;\r\n\r\n//按frame裁减图片\r\n+ (UIImage *)captureView:(UIView *)view frame:(CGRect)frame;\r\n/** 获取设备型号*/\r\n+ (NSString *)deviceVersion;\r\n\r\n/** 获取iOS系统的版本号 */\r\n+ (NSString*)systemVersion;\r\n\r\n/** 判断当前设备是否ipad */\r\n+ (BOOL)isIpad;\r\n\r\n/** 判断当前设备是否iphone */\r\n+ (BOOL)isIphone;\r\n\r\n/** 判断当前系统是否有摄像头 */\r\n+ (BOOL)hasCamera;\r\n\r\n//获取设备状态，是否插入耳机，如果插入耳机，则返回“YES\"\r\n//+ (BOOL)isHeadphone;\r\n\r\n//获取用户语言。\r\n+ (NSString *)userPreferLanguages;\r\n\r\n//判断是否为5系列。\r\n+ (BOOL)isIphone5OriPod5;\r\n- (NSString *)platformInfo;        //平台信息\r\n- (NSString *)cpuType;             //cpu型号\r\n- (NSString *)cpuFrequency;        //cpu频率\r\n- (NSUInteger)cpuCount;            //cpu核数\r\n- (NSArray *)cpuUsage;                 //cpu利用率\r\n- (NSUInteger)totalMemoryBytes;    //获取手机内存总量,返回的是字节数\r\n- (NSUInteger)freeMemoryBytes;     //获取手机可用内存,返回的是字节数\r\n- (long long)freeDiskSpaceBytes;   //获取手机硬盘空闲空间,返回的是字节数\r\n- (long long)totalDiskSpaceBytes;  //获取手机硬盘总空间,返回的是字节数\r\n- (BOOL)isJailBreak;               //是否越狱\r\n- (BOOL)bluetoothCheck;            //是否支持蓝牙\r\n\r\n#import <UIKit/UIKit.h>\r\n\r\n@interface UIColor (Addition)\r\n\r\n/**\r\n *  根据RGB返回UIColor。\r\n *  @ param  red、green、blue :范围0—255。\r\n *  @param  alpha :透明度。\r\n *  return  UIColor。\r\n */\r\n+ (UIColor *)red:(int)red green:(int)green blue:(int)blue alpha:(CGFloat)alpha;\r\n\r\n/**\r\n *  根据UIColor返回RGB数组。\r\n *  @ param  color :传递的参数。\r\n *  return  RGB数组\r\n */\r\n+ (NSArray *)convertColorToRBG:(UIColor *)color;\r\n\r\n/**\r\n *  根据十六进制颜色值返回UIColor。\r\n *  @param  hexColor\r\n *  return  UIColor。\r\n */\r\n+ (UIColor *)convertHexColorToUIColor:(NSInteger)hexColor;\r\n@interface NSFileManager (Addition)\r\n\r\n/**\r\n *  在相应目录下创建一个文件夹。\r\n *  @param  folder :文件夹名。\r\n *  @param  path :文件夹所在路径。\r\n *  return  成功返回YES，失败返回NO。若已存在直接返回YES。\r\n */\r\n+ (BOOL)createFolder:(NSString *)folder atPath:(NSString *)path;\r\n\r\n/**\r\n *  保存文件到相应路径下。\r\n *  @param  data :要保存的数据。\r\n *  @param  name :要保存的文件名，如a.txt等。\r\n *  @param  path :文件保存的路径目录。\r\n *  return  成功返回YES，失败返回NO。\r\n */\r\n+ (BOOL)saveData:(NSData *)data withName:(NSString *)name atPath:(NSString *)path;\r\n\r\n/**\r\n *  查找并返回文件。\r\n *  @param  fileName :要查找的文件名。\r\n *  @param  path :文件所在的目录。\r\n *  return  成功返回文件，失败返回nil。\r\n */\r\n+ (NSData *)findFile:(NSString *)fileName atPath:(NSString *)path;\r\n\r\n/**\r\n *  删除文件。\r\n *  @param  fileName :要删除的文件名。\r\n *  @param  path :文件所在的目录。\r\n *  return  成功返回YES，失败返回NO。\r\n */\r\n+ (BOOL)deleteFile:(NSString *)fileName atPath:(NSString *)path;\r\n\r\n#import <Foundation/Foundation.h>\r\n\r\n@interface NSDate (Addition)\r\n/**\r\n *  将日期转化为字符串。\r\n *  @param  format :转化格式，形如@\"yyyy年MM月dd日hh时mm分ss秒\"。\r\n *  return  返回转化后的字符串。\r\n */\r\n- (NSString *)convertDateToStringWithFormat:(NSString *)format;\r\n\r\n/**\r\n *  将字符串转化为日期。\r\n *  @param  string :给定的字符串日期。\r\n *  @param  format :转化格式，形如@\"yyyy年MM月dd日hh时mm分ss秒\"。日期格式要和string格式一致，否则会为空。\r\n *  return  返回转化后的日期。\r\n */\r\n- (NSDate *)convertStringToDate:(NSString *)string format:(NSString *)format;\r\n\r\n```\r\n## AESCrypto DES3Util\r\n```objective-c\r\n// 加密方法\r\n+ (NSString*)encrypt:(NSString*)plainText;\r\n// 解密方法\r\n+ (NSString*)decrypt:(NSString*)encryptText;\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}